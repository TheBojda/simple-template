{"google":"UA-13010823-15","tagline":"","body":"### Simple template\r\nSimple template is a HTML templating system implemented in Java. Simple template can be used on the server side (ex: in a servlet on AppEngine), or the client side with GWT. The base conception of simple template is programming logic-free plain HTML templating. \r\n\r\n### How simple template is working?\r\nSimple template templates are plain HTML documents, where sections are defined with HTML comments (`<!--{section name}-->...<!--{/section}-->`) or simply with the `{name}` form (it is equal to `<!--{section name}--><!--{/section}-->`). A template is something like this:\r\n\r\n```html\r\n<html>\r\n\t<head>\r\n\t\t<title>Test</title>\r\n\t</head>\r\n\t<body>\r\n\t\t<ul>\r\n\t\t\t<!--{section container}-->\r\n\t\t\t\t<!--{section odd}-->\r\n\t\t\t\t<li><i>{item}</i></li>\r\n\t\t\t\t<!--{/section}-->\r\n\t\t\t\t<!--{section even}-->\r\n\t\t\t\t<li><b>{item}</b></li>\r\n\t\t\t\t<!--{/section}-->\r\n\t\t\t<!--{/section}-->\r\n\t\t</ul>\r\n\t</body>\r\n</html>\r\n```\r\n\r\nThis sections are reusable parts of the template, and empty slots for the data. The first step of using templates are parsing them:\r\n\r\n```java\r\nTemplate t = Template.parse(... template string ...);\r\n```\r\n\r\nEvery section is accessible by name, and can be used as a new template.\r\n\r\n```java\r\nTemplate container = t.get(\"container\");\r\nTemplate odd = container.get(\"odd\");\r\nTemplate even = container.get(\"even\");\r\n```\r\n\r\nThese `Template` objects are reusable structures for generating content. The content generation is done by the template renderer, which is accessible by the `getRenderer()` method.\r\n\r\n```java\r\nTemplateRenderer tr = t.getRender();\r\n```\r\n\r\nThe `TemplateRenderer` objects `.set()` method is used to fill the template.\r\n\r\n```java\r\nodd.getRender().set(\"item\", \"item\" + i)\r\n```\r\n\r\nThis code will generate something like this:\r\n\r\n```html\r\n<li><i>item0</i></li>\r\n```\r\n\r\nIt is possible to fill the slot with sequence of strings by the `addTo()` method:\r\n\r\n```java\r\ntr.addTo(\"container\",\"test1\");\r\ntr.addTo(\"container\",\"test2\");\r\n```\r\n\r\nThis code will generate something like this:\r\n\r\n```html\r\n...\r\n<ul>\r\ntest1\r\ntest2\r\n</ul>\r\n...\r\n```\r\n\r\nIf the renderer is filled, the content can be generated by the `render()` method. Look at a full example by using simple template:\r\n\r\n```java\r\nTemplate t = Template.parse(... template source ...);\r\nTemplate container = t.get(\"container\");\r\nTemplate odd = container.get(\"odd\");\r\nTemplate even = container.get(\"even\");\r\n\r\nTemplateRenderer tr = t.getRender();\r\nfor (int i = 0; i < 10; i++)\r\n  tr.addTo(\"container\",\r\n    (i % 2 == 0 \r\n    ? \r\n    odd.getRender().set(\"item\", \"item\" + i)\r\n    : \r\n    even.getRender().set(\"item\", \"item\" + i)\r\n    ));\r\nSystem.out.println(tr.render());\r\n``` ","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Simple-template"}